name: Postgres ERP
on:
  push:
    branches:
      - pre-prod
  pull_request:
concurrency:
  group: postgres-erpnext-${{ github.event.number }}
  cancel-in-progress: true
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Server
    services:
      redis-cache:
        image: redis:alpine
        ports:
          - 13000:6379
      redis-queue:
        image: redis:alpine
        ports:
          - 11000:6379
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test_site
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U root" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install PostgreSQL Client
        run: sudo apt-get install postgresql-client
      - name: Install Redis Server
        run: sudo apt-get install redis-server -y
      - name: Setup
        run: |
          pip install frappe-bench
          bench init frappe-bench --frappe-path https://github.com/8848digital/frappe-v15.git --frappe-branch pre-prod
          psql --host 127.0.0.1 --port 5432 -U root -c "CREATE DATABASE test_site;"
      - name: Install
        working-directory: /home/runner/frappe-bench
        run: |
          bench get-app erpnext https://github.com/8848digital/erpnext.git --branch pre-prod
          bench setup requirements --dev
          bench new-site --db-root-password root --admin-password admin test_site
          bench --site test_site install-app erpnext
        env:
          CI: 'Yes'
      - name: Run Tests
        working-directory: /home/runner/frappe-bench
        run: |
          bench --site test_site set-config allow_tests true
          bench --site test_site run-tests --doctype "Purchase Order"
        env:
          TYPE: server
      - name: Run Tests
        run: cd ~/frappe-bench/ && bench --site test_site run-tests --app erpnext --doctype "Purchase Order" --coverage
        env:
          TYPE: server
      - name: Upload coverage data
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: /home/runner/frappe-bench/sites/coverage.xml
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
