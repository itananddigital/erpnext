name: Frappe Tests with Code Coverage
on:
  push:
    branches:
      - pre-prod
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_frappe
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      # Step 1: Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      
      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          pip install pytest pytest-cov

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Step 4: Prepare Frappe Test Environment
      - name: Prepare Frappe Test Environment
        run: |
          bench init --skip-assets frappe-bench
          cd frappe-bench
          bench get-app frappe .
          bench get-app erpnext https://github.com/frappe/erpnext.git --branch version-15
          bench new-site test_site --mariadb-root-password=root --admin-password=admin --install-app frappe --install-app erpnext

      # Step 5: Run tests with detailed coverage
      - name: Run Tests
        run: |
          cd frappe-bench/apps/frappe
          pytest --cov=frappe --cov-report=term-missing --cov-report=xml --cov-fail-under=100

      # Step 6: Upload code coverage report
      - name: Upload Coverage Report
        uses: acid-chicken/lcov-reporter-action@v0.4.1
        with:
          coverage_file: frappe-bench/apps/frappe/coverage.xml
          minimum_coverage: 100
        env:
          DEV_TOKEN: ${{ secrets.DEV_TOKEN }}
